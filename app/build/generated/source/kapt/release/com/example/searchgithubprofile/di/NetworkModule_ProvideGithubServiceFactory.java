// Generated by Dagger (https://dagger.dev).
package com.example.searchgithubprofile.di;

import com.example.searchgithubprofile.network.GithubService;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;
import retrofit2.Retrofit;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class NetworkModule_ProvideGithubServiceFactory implements Factory<GithubService> {
  private final Provider<Retrofit> retrofitProvider;

  public NetworkModule_ProvideGithubServiceFactory(Provider<Retrofit> retrofitProvider) {
    this.retrofitProvider = retrofitProvider;
  }

  @Override
  public GithubService get() {
    return provideGithubService(retrofitProvider.get());
  }

  public static NetworkModule_ProvideGithubServiceFactory create(
      Provider<Retrofit> retrofitProvider) {
    return new NetworkModule_ProvideGithubServiceFactory(retrofitProvider);
  }

  public static GithubService provideGithubService(Retrofit retrofit) {
    return Preconditions.checkNotNullFromProvides(NetworkModule.INSTANCE.provideGithubService(retrofit));
  }
}
